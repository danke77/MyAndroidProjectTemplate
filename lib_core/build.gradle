apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION.toInteger()
        targetSdkVersion TARGET_SDK_VERSION.toInteger()
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME.toString()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
        lintConfig file("${rootProject.rootDir}/lint.xml")
    }

    sourceSets {
        main {
            manifest.srcFile "src/main/AndroidManifest.xml"
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res/']
        }

        androidTest {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"
    testImplementation "junit:junit:${JNUIT_VERSION}"

    // kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${KOTLIN_VERSION}"

    // android
    api "com.android.support:design:$ANDROID_SUPPORT_VERSION"
    api 'com.android.support.constraint:constraint-layout:1.1.2'
    // support v4
    api "com.android.support:support-compat:$ANDROID_SUPPORT_VERSION"
    api "com.android.support:support-core-utils:$ANDROID_SUPPORT_VERSION"
    api "com.android.support:support-core-ui:$ANDROID_SUPPORT_VERSION"
    api "com.android.support:support-fragment:$ANDROID_SUPPORT_VERSION"
    // support v7
    api "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    api "com.android.support:cardview-v7:$ANDROID_SUPPORT_VERSION"
    // support
    api "com.android.support:exifinterface:$ANDROID_SUPPORT_VERSION"

    // arch
    api 'android.arch.lifecycle:extensions:1.1.1'
    api 'android.arch.lifecycle:common-java8:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'

    // rx
    api 'io.reactivex.rxjava2:rxjava:2.1.16'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    api 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
    api 'com.jakewharton.rxbinding2:rxbinding:2.1.1'

    // json
    api 'com.google.code.gson:gson:2.8.5'

    // runtime permission
    api 'pub.devrel:easypermissions:1.2.0'

    // recyclerview

    // network
    api 'com.danke.android:oknet:1.0.2'

    // database

    // others
    api 'com.google.android:flexbox:0.3.2'
    api 'me.drakeet.support:toastcompat:1.0.2'
}

configurations.all {
    exclude group: 'com.android.support', module: 'support-media-compat'
}